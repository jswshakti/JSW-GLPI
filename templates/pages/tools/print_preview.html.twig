{% import 'components/form/basic_inputs_macros.html.twig' as _inputs %}
{% import 'components/alerts_macros.html.twig' as alerts %}

{% if is_render == false %}
    <div class="hr-text mt-2 mb-5">
        <span style="font-size: 1.5em;" >{{ __('Select tabs to print') }}</span>
    </div>
    <form name="print_form"method="post" action="{{ call('PrintPreview::getFormUrl') }}">
        <input type="hidden" name="_glpi_csrf_token" value="{{ csrf_token() }}">
        <input type="hidden" name="itemtype" value="{{ itemtype }}">
        <input type="hidden" name="items_id" value="{{ items_id }}">
        <div class="container">
            <div class="row">
                {% for key, tab in tabs %}
                    <div class="col-1 my-2 align-items-center text-end">
                        {{ _inputs.checkbox(key, key == itemtype ? 1 : 0, {'disabled': key == itemtype ? true : false}) }}
                    </div>
                    <div class="col-3 text-start my-2">
                        {{ tab|raw }}
                    </div>
                {% endfor %}
            </div>

            <div class="hr my-2"></div>
            <div class="row">
                <div class="col-8 my-2">
                </div>
                <div class="col-1 my-2 align-items-center text-end">
                        <input type="checkbox" class="form-check-input" name="select_all" onclick="selectAllCheckboxes(this.checked)"/>
                </div>
                <div class="col-3 text-start my-2">
                    <i class="ti ti-checks me-1"></i>
                    {{ __('All') }}
                </div>
            </div>
        </div>
        <div class="hr my-2"></div>
        <div class="container text-center">
            <input name="generate_preview" class="btn btn-primary mt-2" type="submit" value="{{ __('Generate preview') }}" />
        </div>
    </form>
    <script>
        function selectAllCheckboxes(isChecked) {
            var checkboxes = document.querySelector('form[name="print_form"]').querySelectorAll('input[type=checkbox]:not([disabled])');

            checkboxes.forEach(function(checkbox) {
                checkbox.checked = isChecked;
            });
        }
        $(document).ready(function() {
            var form = document.querySelector('form[action="/main/public/front/massiveaction.php"]');
            if (form) {
                var modalDialogs = form.querySelectorAll('.modal-dialog');
                modalDialogs.forEach(function(modalDialog) {
                    modalDialog.classList.add('modal-lg');
                });
                console.log(modalDialogs);
            }
        })
    </script>
{% else %}
    {% if has_preview == true %}
        <div class="preview">
            <div class="card my-0 border-0 shadow-none">
                <div class="card-header">
                    <h4 class="card-title ps-4">
                        <i class="{{ call(item.getType() ~ '::getIcon') }}"></i> &nbsp {{ call(item.getType() ~ '::getTypeName') }}
                    </h4>
                </div>
            </div>
            {% include 'generic_show_form.html.twig' %}
            {% for key, value in printable_tabs %}
                {% if value == 1 and call('class_exists',[key]) and key != options.itemtype %}
                    <div class="break"></div>
                    <div class="card my-0 border-0 shadow-none">
                        <div class="card-header">
                            <h4 class="card-title ps-4">

                                <i class="{{ call(key ~ '::getIcon') }}"></i> &nbsp {{ key == 'Item_Devices' ? 'Components' : call(key ~ '::getTypeName') }}
                            </h4>
                        </div>
                    </div>
                    {% do call(key ~ '::displayTabContentForItem',[item, 0]) %}
                {% endif %}
            {% endfor %}
        </div>
        <script type="text/javascript">
            $(document).ready(() => {
                var preview = document.querySelector('.preview');
                console.log(preview);
                if (preview) {
                    preview.querySelectorAll('input').forEach(input => {
                        input.setAttribute('readonly', true);
                    });

                    var selectors = 'button,' +
                                    'input[type="button"],' +
                                    'input[type="submit"],' +
                                    'input[type="reset"],' +
                                    'input[type="checkbox"],' +
                                    '[class*="btn "],' +
                                    '[class*="search-pager"],' +
                                    '[class*="tab_cadre_pager"],' +
                                    '[class*="alert-"],' +
                                    '[class*="selection__arrow"],' +
                                    '[class*="fileupload"],' +
                                    '[class*="add_relation"],' +
                                    'form[action="contract_item"],' +
                                    'form[action*="asset_peripheralasset"],' +
                                    'form[action*="socket"],' +
                                    'form[action*="document"],' +
                                    'form[action*="item_line"],' +
                                    'form[action*="networkport"],' +
                                    'form[action*="item_softwarelicense"],' +
                                    'form[action*="item_softwareversion"],' +
                                    'form[action*="contract_item"],' +
                                    'form[action*="knowbaseitem_item"],' +
                                    'form[action*="certificate_item"],' +
                                    'form[action*="domain"],' +
                                    'form[action*="appliance_item"],' +
                                    'label[for*="pictures_"],' +
                                    'form[id*="form_device_add"],' +
                                    'span[class*="fa-plus pointer"]';

                    var elements = document.querySelectorAll(selectors);

                    elements.forEach(function(element) {
                        element.style.display = 'none';
                    });

                    var tables = preview.querySelectorAll('table, .table');
                    console.log(tables);

                    tables.forEach(function(table) {
                        table.style.width = '100%';
                        table.style.maxWidth = '100%';
                        table.style.boxSizing = 'border-box';
                        table.style.tableLayout = 'fixed';
                        table.style.overflowX = 'hidden';

                        var children = table.querySelectorAll('td, a, span');
                        children.forEach(function(child) {
                            child.style.whiteSpace = 'normal';
                            child.style.wordWrap = 'break-word';
                            child.style.overflowWrap = 'break-word';
                        });

                        var tfootAndNoHoverRows = table.querySelectorAll('tfoot, tr[class*="noHover"]');
                        tfootAndNoHoverRows.forEach(function(element) {
                            element.style.display = 'none';
                        });
                        var maxColumnCount = 0;

                        table.querySelectorAll('tr').forEach(function(row) {
                            var columnCount = row.children.length;
                            maxColumnCount = Math.max(maxColumnCount, columnCount);
                        });

                        if(maxColumnCount > 3) {
                            table.querySelectorAll('th').forEach(function(th) {
                                if(!th.hasAttribute('colspan') || th.getAttribute('colspan') < 3) {
                                    th.style.writingMode = 'vertical-rl';
                                    th.style.transform = 'rotate(180deg)';
                                    th.style.whiteSpace = 'nowrap';
                                    th.style.verticalAlign = 'top';
                                }
                            });
                        }
                    });
                }
            });
        </script>
    {% else %}
        {{ alerts.alert_warning(
            __('No preview generated for this item, please execute "Display to a printable view" action.')
        ) }}
    {% endif %}
{% endif %}